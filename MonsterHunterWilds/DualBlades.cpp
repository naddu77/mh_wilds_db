#include "pch.h"
#include "DualBlades.h"
#include "DualBlades.g.cpp"

// WARNING: This file is automatically generated by a tool. Do not directly
// add this file to your project, as any changes you make will be lost.
// This file is a stub you can use as a starting point for your implementation.
//
// To add a copy of this file to your project:
//   1. Copy this file from its original location to the location where you store 
//      your other source files (e.g. the project root). 
//   2. Add the copied file to your project. In Visual Studio, you can use 
//      Project -> Add Existing Item.
//   3. Delete this comment and the 'static_assert' (below) from the copied file.
//      Do not modify the original file.
//
// To update an existing file in your project:
//   1. Copy the relevant changes from this file and merge them into the copy 
//      you made previously.
//    
// This assertion helps prevent accidental modification of generated files.
static_assert(false, "This file is generated by a tool and will be overwritten. Open this error and view the comment for assistance.");

namespace winrt::MonsterHunterWilds::implementation
{
    DualBlades::DualBlades(int32_t id, int32_t game_id, winrt::MonsterHunterWilds::WeaponKind const& kind, hstring const& name, int32_t rarity, winrt::MonsterHunterWilds::WeaponDamage const& damage, winrt::Windows::Foundation::Collections::IVector<winrt::MonsterHunterWilds::WeaponSpecial> const& specials, winrt::MonsterHunterWilds::Sharpness const& sharpness, winrt::Windows::Foundation::Collections::IVector<int32_t> const& handicraft, winrt::Windows::Foundation::Collections::IVector<winrt::MonsterHunterWilds::SkillRank> const& skills, int32_t defense_bonus, winrt::MonsterHunterWilds::Elderseal const& elderseal, int32_t affinity, winrt::Windows::Foundation::Collections::IVector<int32_t> const& slots, winrt::MonsterHunterWilds::WeaponCrafting const& crafting, winrt::MonsterHunterWilds::WeaponSeries const& series)
    {
        throw hresult_not_implemented();
    }
    winrt::MonsterHunterWilds::DualBlades DualBlades::Parse(winrt::Windows::Data::Json::JsonObject const& json_object)
    {
        throw hresult_not_implemented();
    }
    int32_t DualBlades::Id()
    {
        throw hresult_not_implemented();
    }
    int32_t DualBlades::GameId()
    {
        throw hresult_not_implemented();
    }
    winrt::MonsterHunterWilds::WeaponKind DualBlades::Kind()
    {
        throw hresult_not_implemented();
    }
    hstring DualBlades::Name()
    {
        throw hresult_not_implemented();
    }
    int32_t DualBlades::Rarity()
    {
        throw hresult_not_implemented();
    }
    winrt::MonsterHunterWilds::WeaponDamage DualBlades::Damage()
    {
        throw hresult_not_implemented();
    }
    winrt::Windows::Foundation::Collections::IVector<winrt::MonsterHunterWilds::WeaponSpecial> DualBlades::Specials()
    {
        throw hresult_not_implemented();
    }
    winrt::MonsterHunterWilds::Sharpness DualBlades::Sharpness()
    {
        throw hresult_not_implemented();
    }
    winrt::Windows::Foundation::Collections::IVector<int32_t> DualBlades::Handicraft()
    {
        throw hresult_not_implemented();
    }
    winrt::Windows::Foundation::Collections::IVector<winrt::MonsterHunterWilds::SkillRank> DualBlades::Skills()
    {
        throw hresult_not_implemented();
    }
    int32_t DualBlades::DefenseBonus()
    {
        throw hresult_not_implemented();
    }
    winrt::MonsterHunterWilds::Elderseal DualBlades::Elderseal()
    {
        throw hresult_not_implemented();
    }
    int32_t DualBlades::Affinity()
    {
        throw hresult_not_implemented();
    }
    winrt::Windows::Foundation::Collections::IVector<int32_t> DualBlades::Slots()
    {
        throw hresult_not_implemented();
    }
    winrt::MonsterHunterWilds::WeaponCrafting DualBlades::Crafting()
    {
        throw hresult_not_implemented();
    }
    winrt::MonsterHunterWilds::WeaponSeries DualBlades::Series()
    {
        throw hresult_not_implemented();
    }
}
